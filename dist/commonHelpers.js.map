{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\r\nimport \"flatpickr/dist/flatpickr.min.css\";\r\nimport iziToast from \"izitoast\";\r\nimport \"izitoast/dist/css/iziToast.min.css\";\r\n\r\nlet userSelectedDate;\r\nconst options = {\r\n  enableTime: true,\r\n  time_24hr: true,\r\n  defaultDate: new Date(),\r\n  minuteIncrement: 1,\r\n  onClose(selectedDates) {\r\n    console.log(selectedDates[0]);\r\n  },\r\n};\r\n\r\n\r\nconst startBtn = document.querySelector('button[data-action-start]');\r\nconst stopBtn = document.querySelector('button[data-action-stop]');\r\nconst clockface = document.querySelector('.js-clockface');\r\n\r\n// =======================================\r\n\r\nlet isActive;\r\nlet intervalId;\r\nlet initTime = new Date('03.04.2024 12:43');\r\n\r\nfunction startTimer() {\r\n  intervalId = setInterval(() => {\r\n    const currentTime = Date.now();\r\n    const diff = initTime - currentTime;\r\n    renderTime(diff);\r\n\r\n    if (diff < 1000) stopTimer();\r\n  }, 1000);\r\n}\r\n\r\nfunction stopTimer() {\r\n  clearInterval(intervalId);\r\n}\r\n\r\n// =========================================\r\n\r\nstartBtn.addEventListener('click', () => {\r\n  startTimer();\r\n});\r\n\r\nstopBtn.addEventListener('click', () => {\r\n  stopTimer();\r\n});\r\n\r\nfunction renderTime(diff) {\r\n  const time = convertMsToTime(diff);\r\n  clockface.innerHTML = time;\r\n}\r\n\r\n\r\nfunction padTo2Digits(num) {\r\n  return num.toString().padStart(2, '0');\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction convertMs(ms) {\r\n  // Number of milliseconds per unit of time\r\n  const second = 1000;\r\n  const minute = second * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n\r\n  // Remaining days\r\n  const days = Math.floor(ms / day);\r\n  // Remaining hours\r\n  const hours = Math.floor((ms % day) / hour);\r\n  // Remaining minutes\r\n  const minutes = Math.floor(((ms % day) % hour) / minute);\r\n  // Remaining seconds\r\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\r\n\r\n  return { days, hours, minutes, seconds };\r\n}\r\n\r\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\r\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\r\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}"],"names":["startBtn","stopBtn","clockface","intervalId","initTime","startTimer","currentTime","diff","renderTime","stopTimer","time"],"mappings":"wFAiBA,MAAMA,EAAW,SAAS,cAAc,2BAA2B,EAC7DC,EAAU,SAAS,cAAc,0BAA0B,EAC3DC,EAAY,SAAS,cAAc,eAAe,EAKxD,IAAIC,EACAC,EAAW,IAAI,KAAK,kBAAkB,EAE1C,SAASC,GAAa,CACpBF,EAAa,YAAY,IAAM,CAC7B,MAAMG,EAAc,KAAK,MACnBC,EAAOH,EAAWE,EACxBE,EAAWD,CAAI,EAEXA,EAAO,KAAME,GAClB,EAAE,GAAI,CACT,CAEA,SAASA,GAAY,CACnB,cAAcN,CAAU,CAC1B,CAIAH,EAAS,iBAAiB,QAAS,IAAM,CACvCK,GACF,CAAC,EAEDJ,EAAQ,iBAAiB,QAAS,IAAM,CACtCQ,GACF,CAAC,EAED,SAASD,EAAWD,EAAM,CACxB,MAAMG,EAAO,gBAAgBH,CAAI,EACjCL,EAAU,UAAYQ,CACxB"}